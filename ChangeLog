2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add checks for Bind, Function and Ref.
	* README: Mention the new libraries.
	* build-aux/boost.m4 (BOOST_BIND, BOOST_FUNCTION, BOOST_REF): New.
	* tests/testsuite.at: Test the new macros.
	Contribution of Staffan Gimåker.

2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Fix the version check.
	The version check was completely wrong (!) and would always succeed.
	* build-aux/boost.m4 (BOOST_REQUIRE): Properly compute the various
	parts of the version (major, minor, sub-minor) from the
	BOOST_VERSION macro defined in version.hpp.
	Bug reported by Staffan Gimåker.

2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Fix typos.
	* build-aux/boost.m4: Correct various tyops everywhere.

2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Check that version.hpp exists before trying an include path.
	* build-aux/boost.m4 (BOOST_REQUIRE): Here.  This ensures that we
	don't get the include path wrong *but* the test succeeds because
	Boost is reachable thanks to the default include path of the
	compiler.  Bug reported by Staffan Gimåker.

2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Re-order the macros.
	* build-aux/boost.m4: Sort the macros alphabetically (yes, `T' is
	after `S' :D).

2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add support for Date_Time, Regex, Signals and Test.
	* README: Mention the new libraries.
	* build-aux/boost.m4 (BOOST_DATE_TIME, BOOST_REGEX, BOOST_SIGNALS)
	(BOOST_TEST): New tests contributed by Staffan Gimåker.
	* tests/testsuite.at: Test the new macros.

2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Aggressively optimize the checks against Boost libraries.
	Checking for Boost libraries that require linking was very slow
	because it took several iteration to discover the proper link flags
	to use to properly compile+link a C++ test file.  The test file was
	thus compiled over and over again until the right set of flag is
	found.  Compilation is time-consuming, especially with Boost, so the
	trick is to compile the file once and then try to link it.
	Unfortunately, Autoconf doesn't seem to allow this and always wants
	to delete the intermediate object file.  This file thus bypasses one
	of the Autoconf internal macro to retain the object file.
	On a test case which checks for 2 libraries, the configure time is
	reduced by a factor of 5 on my laptop (~100s -> ~20s).
	* build-aux/boost.m4 (BOOST_FIND_LIB): Compile the test file once
	and then try to link it.
	(_BOOST_AC_LINK_IFELSE): Fork of the Autoconf macro _AC_LINK_IFELSE.
	Optimization suggested by David Herring.

2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Optimize the detection of preference for MT flavors.
	* build-aux/boost.m4 (BOOST_FIND_LIB): Move a compilation test...
	(_BOOST_GUESS_WHETHER_TO_USE_MT): Here.  So that the test is only
	executed once per configure script.

2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Fix the test of Boost.Graph.
	* build-aux/boost.m4 (BOOST_GRAPH): Fix the C++ code used to test
	the library.

2007-11-20  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Do not pollute the user-reserved variables.
	* build-aux/boost.m4 (BOOST_FIND_LIB): Fix a bug: when a library was
	found, the LDFLAGS and LIBS weren't properly reset and the macro was
	thus polluting user-reserved variables.  This needs to be tested in
	the testsuite.
	Also do not pass -R to the compiler during the tests, this flag is
	only usable safely with libtool.

2007-11-17  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Fix a typo in BOOST_THREADS.
	* build-aux/boost.m4 (BOOST_THREADS): Properly set
	`boost_threads_save_CPPFLAGS' to `CPPFLAGS' instead of `LIBS'!
	Bug reported by David Herring.

2007-11-13  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Preserve the original values of --host / --build.
	This fixes `make check' in cross-compilation environments.
	* tests/atlocal.in ($build, $host): Replace with ...
	($build_alias, $host_alias): ... these.  New.
	* tests/testsuite.at (AT_CHECK_AUTOCONF): Use them here.

2007-11-12  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add keywords to the testsuite.
	* tests/testsuite.at (AT_CHECK_MACRO, AT_CHECK_MACRO_CROSS): Add an
	argument in 2nd position (minor backward incompatible change) to
	specify keywords for the tests.
	Use keywords for all tests (core/lib/header with or without cross).

2007-11-12  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add tests for Boost.Program_options.
	* README: Mention the new library.
	* build-aux/boost.m4 (BOOST_PROGRAM_OPTIONS): New macro.
	* tests/testsuite.at: Add a test for the new macro.

2007-11-03  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Use Libtool and -R to encode run paths.
	* README: Mention the dependencies more clearly near the beginning.
	Add a step to use Libtool if it's not already used.
	* build-aux/boost.m4 (BOOST_FIND_LIB): Add -R flags in the LDFLAGS
	and fix a bug when --with-boost isn't used which leads to
	$with_boost being empty which leads that /lib is checked first.
	* configure.ac: Invoke AC_PROG_LIBTOOL.
	* tests/testsuite.at (AT_CONFIGURE_AC): Import the content of
	aclocal.m4 without the m4_include's in order to use AC_PROG_LIBTOOL
	without getting the hassle of libtoolize.
	(AT_CHECK_MACRO): Do not pass -W obsolete to autoconf to avoid
	spurious warnings due to Libtool.

2007-11-02  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Another fix for GCC3 and Boost.Thread.
	* build-aux/boost.m4 (BOOST_THREADS): Put -pthread in
	BOOST_CPPFLAGS (required for GCC3).

2007-11-02  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Change the order of the tests.
	* tests/testsuite.at: Do the tests that require linking first
	(because they are more likely to fail).

2007-11-02  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add tests for SmartPtr, StringAlgo, Tribool and Tuple.
	* README: Mention the new libraries.
	* build-aux/boost.m4 (BOOST_SMART_PTR, BOOST_STRING_ALGO)
	(BOOST_TRIBOOL, BOOST_TUPLE): New.
	* tests/testsuite.at: Test the new macros.

2007-11-02  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Fix distcheck.
	* AUTHORS: New.
	* NEWS: New.
	* README: Mention the license and how to fetch the latest version.
	* build-aux/boost.m4: Mention how to fetch the latest version.
	* configure.ac (AM_INIT_AUTOMAKE): Drop `foreign'.
	* tests/Makefile.am ($(TESTSUITE)): Adjust dependencies to fix
	distcheck.

2007-11-02  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Properly find the pthreads flags for use with Boost.Thread.
	* build-aux/boost.m4 (_BOOST_PTHREAD_FLAG): New internal helper.
	(BOOST_THREADS): Use it.  Use the pthread flag during the tests for
	Boost.Thread.
	* tests/testsuite.at: Since the test for Boost.Thread is now more
	costly, do the cross-compilation test with Boost.Filesystem instead.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Fix the testsuite to preserve the various arguments of configure.
	* build-aux/boost.m4 (BOOST_REQUIRE): Define
	DISTCHECK_CONFIGURE_FLAGS to automatically preserve the --with-boost
	argument.
	* configure.ac: Use AC_CANONICAL_HOST.
	(AC_CONFIG_FILES): Generate tests/package.m4.
	* tests/Makefile.am (EXTRA_DIST, $(TESTSUITE)): Adjust.
	No longer need to generate package.m4 since it's now generated from
	package.m4.in.
	* tests/atlocal.in (CXX, LD, CONFIGURE_FLAGS, build, host): New.
	* tests/package.m4.in: New.
	* tests/testsuite.at: Invoke configure with the proper flags (that
	is, preserve the original configuration).

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add a README.
	* README: New.
	* build-aux/boost.m4: Advertise the Git repository.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Fix the detection of the toolset name for GCC.
	* build-aux/boost.m4 (_BOOST_gcc_test): New internal helper.
	(_BOOST_FIND_COMPILER_TAG): Use _BOOST_gcc_test to take into account
	the minor version number of GCC into the toolset name.
	* configure.ac: Invoke _BOOST_FIND_COMPILER_TAG to warn earlier
	about unknown toolsets.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add a test for Boost.Variant.
	* build-aux/boost.m4 (BOOST_VARIANT): New.
	* tests/testsuite.at: Test the new macro.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add tests for Boost.Format and Boost.Utility.
	* build-aux/boost.m4 (BOOST_FORMAT, BOOST_UTILITY): New.
	* tests/testsuite.at: Test the new macros.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add a check for Boost.Conversion.
	* build-aux/boost.m4 (BOOST_CONVERSION): New.
	* tests/testsuite.at: Add a test for the new macro.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add a check for Boost.Filesystem.
	* build-aux/boost.m4 (BOOST_FILESYSTEM): New.
	* tests/testsuite.at: Add a test for the new macro.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add some cross-compilation tests.
	* tests/testsuite.at: Here.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add a check for Boost.Graph.
	* build-aux/boost.m4 (BOOST_GRAPH): New.
	* tests/testsuite.at: Test the new macro.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add macros for Boost.Foreach and Boost.Threads.
	* build-aux/boost.m4 (BOOST_FOREACH, BOOST_THREADS): New.
	* tests/testsuite.at: Test the new macros.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Fix distcheck.
	* configure.ac: Use AC_CONFIG_HEADERS.
	* tests/Makefile.am (CLEANFILES): New.
	Make package.m4 depend on Makefile.in.  Disable installcheck-local.

2007-11-01  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add macros to check for Boost libraries and headers.
	* build-aux/boost.m4 (BOOST_REQUIRE): Restrain variable names to the
	pseudo /_?boost/i namespace.  Look up the version string of Boost in
	boost/version.hpp.
	(BOOST_FIND_HEADER, BOOST_FIND_LIB): New.

2007-10-31  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add a testsuite.
	* Makefile.am (SUBDIRS): New.
	* configure.ac: Adjust for the testsuite.
	* tests/Makefile.am: New.
	* tests/atlocal.in: Copy from Makefile.am.
	* tests/testsuite.at: New.

2007-10-31  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Initial version.
	* ChangeLog: New.
	* Makefile.am: New.
	* bootstrap: New.
	* build-aux/boost.m4: New.
	(BOOST_REQUIRE): New.
	* configure.ac: New.

